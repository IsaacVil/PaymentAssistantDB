-- MySQL Script generated by MySQL Workbench
-- Sat Mar 22 13:04:35 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema PayAssistantDB
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema PayAssistantDB
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `PayAssistantDB` DEFAULT CHARACTER SET utf8 ;
USE `PayAssistantDB` ;

-- -----------------------------------------------------
-- Table `PayAssistantDB`.`paya_modules`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PayAssistantDB`.`paya_modules` (
  `moduleid` TINYINT(10) NOT NULL,
  `home` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`moduleid`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PayAssistantDB`.`paya_languages`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PayAssistantDB`.`paya_languages` (
  `languageid` INT NOT NULL,
  `languagename` VARCHAR(30) NOT NULL,
  `enable` BIT(1) NOT NULL,
  `culture` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`languageid`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PayAssistantDB`.`paya_translations`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PayAssistantDB`.`paya_translations` (
  `translationsid` INT NOT NULL,
  `translationkey` VARCHAR(50) NOT NULL,
  `caption` VARCHAR(300) NOT NULL,
  `enable` BIT(1) NOT NULL,
  `code` VARCHAR(20) NOT NULL,
  `paya_translationscol` VARCHAR(45) NOT NULL,
  `moduleid` TINYINT(10) NOT NULL,
  `languageid` INT NOT NULL,
  PRIMARY KEY (`translationsid`),
  INDEX `paya_modules2_idx` (`moduleid` ASC) VISIBLE,
  INDEX `paya_languages1_idx` (`languageid` ASC) VISIBLE,
  CONSTRAINT `paya_modules2`
    FOREIGN KEY (`moduleid`)
    REFERENCES `PayAssistantDB`.`paya_modules` (`moduleid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `paya_languages1`
    FOREIGN KEY (`languageid`)
    REFERENCES `PayAssistantDB`.`paya_languages` (`languageid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PayAssistantDB`.`paya_roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PayAssistantDB`.`paya_roles` (
  `roleid` INT NOT NULL,
  `rolename` VARCHAR(30) NOT NULL,
  `description` VARCHAR(60) NOT NULL,
  `asignationdate` DATETIME NOT NULL,
  `is_system_role` BIT(1) NOT NULL,
  PRIMARY KEY (`roleid`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PayAssistantDB`.`paya_permissions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PayAssistantDB`.`paya_permissions` (
  `permissionid` INT NOT NULL,
  `permissioncode` VARCHAR(10) NOT NULL,
  `description` VARCHAR(45) NOT NULL,
  `htmlObjectid` VARCHAR(60) NOT NULL,
  `moduleid` TINYINT(10) NOT NULL,
  INDEX `paya_modules1_idx` (`moduleid` ASC) VISIBLE,
  PRIMARY KEY (`permissionid`),
  CONSTRAINT `paya_modules1`
    FOREIGN KEY (`moduleid`)
    REFERENCES `PayAssistantDB`.`paya_modules` (`moduleid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PayAssistantDB`.`paya_rolespermissions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PayAssistantDB`.`paya_rolespermissions` (
  `rolepermissionsid` INT NOT NULL,
  `asignationdate` DATETIME NOT NULL,
  `enable` BIT(1) NOT NULL,
  `deleted` BIT(1) NOT NULL,
  `lastupdate` DATETIME NOT NULL,
  `username` VARCHAR(45) NOT NULL,
  `checksum` VARBINARY(250) NOT NULL,
  `roleid` INT NOT NULL,
  `permissionid` INT NOT NULL,
  PRIMARY KEY (`rolepermissionsid`),
  INDEX `fk_paya_rolespermissions_paya_roles1_idx` (`roleid` ASC) VISIBLE,
  INDEX `fk_paya_rolespermissions_paya_permissions1_idx` (`permissionid` ASC) VISIBLE,
  CONSTRAINT `fk_paya_rolespermissions_paya_roles1`
    FOREIGN KEY (`roleid`)
    REFERENCES `PayAssistantDB`.`paya_roles` (`roleid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_paya_rolespermissions_paya_permissions1`
    FOREIGN KEY (`permissionid`)
    REFERENCES `PayAssistantDB`.`paya_permissions` (`permissionid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PayAssistantDB`.`paya_users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PayAssistantDB`.`paya_users` (
  `userid` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(45) NULL,
  `email` VARCHAR(80) NULL,
  `password` VARBINARY(250) NULL,
  `fname` VARCHAR(45) NULL,
  `lname` VARCHAR(45) NULL,
  `phone` VARCHAR(30) NULL,
  `enable` BIT(1) NULL,
  `verified` BIT(1) NULL,
  `creationdate` DATETIME NOT NULL,
  `lastlogin` DATETIME NOT NULL,
  PRIMARY KEY (`userid`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PayAssistantDB`.`paya_usersroles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PayAssistantDB`.`paya_usersroles` (
  `usersrolesid` INT NOT NULL,
  `asginationdate` DATETIME NOT NULL,
  `username` VARCHAR(45) NOT NULL,
  `checksum` VARBINARY(250) NOT NULL,
  `enable` BIT(1) NOT NULL,
  `deleted` BIT(1) NOT NULL,
  `roleid` INT NOT NULL,
  `paya_users_userid` INT NOT NULL,
  PRIMARY KEY (`usersrolesid`),
  INDEX `fk_paya_usersroles_paya_roles1_idx` (`roleid` ASC) VISIBLE,
  INDEX `fk_paya_usersroles_paya_users1_idx` (`paya_users_userid` ASC) VISIBLE,
  CONSTRAINT `fk_paya_usersroles_paya_roles1`
    FOREIGN KEY (`roleid`)
    REFERENCES `PayAssistantDB`.`paya_roles` (`roleid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_paya_usersroles_paya_users1`
    FOREIGN KEY (`paya_users_userid`)
    REFERENCES `PayAssistantDB`.`paya_users` (`userid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PayAssistantDB`.`paya_companies`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PayAssistantDB`.`paya_companies` (
  `companyid` INT NOT NULL,
  `companyname` VARCHAR(45) NOT NULL,
  `taxid` VARCHAR(10) NULL,
  `enable` BIT(1) NOT NULL,
  `deleted` BIT(1) NOT NULL,
  `industry` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`companyid`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PayAssistantDB`.`paya_currencies`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PayAssistantDB`.`paya_currencies` (
  `currencyid` INT NOT NULL,
  `name` VARCHAR(50) NOT NULL,
  `acronym` VARCHAR(15) NOT NULL,
  `country` VARCHAR(45) NOT NULL,
  `symbol` VARCHAR(1) NOT NULL,
  PRIMARY KEY (`currencyid`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PayAssistantDB`.`paya_countries`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PayAssistantDB`.`paya_countries` (
  `countryid` INT NOT NULL AUTO_INCREMENT,
  `countryname` VARCHAR(60) NOT NULL,
  `currencyid` INT NOT NULL,
  `languageid` INT NOT NULL,
  PRIMARY KEY (`countryid`),
  INDEX `fk_paya_countries_paya_currencies1_idx` (`currencyid` ASC) VISIBLE,
  INDEX `fk_paya_countries_paya_languages1_idx` (`languageid` ASC) VISIBLE,
  CONSTRAINT `fk_paya_countries_paya_currencies1`
    FOREIGN KEY (`currencyid`)
    REFERENCES `PayAssistantDB`.`paya_currencies` (`currencyid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_paya_countries_paya_languages1`
    FOREIGN KEY (`languageid`)
    REFERENCES `PayAssistantDB`.`paya_languages` (`languageid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PayAssistantDB`.`paya_states`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PayAssistantDB`.`paya_states` (
  `stateid` INT NOT NULL,
  `statename` VARCHAR(60) NOT NULL,
  `paya_countries_countryid` INT NOT NULL,
  PRIMARY KEY (`stateid`),
  INDEX `fk_paya_states_paya_countries1_idx` (`paya_countries_countryid` ASC) VISIBLE,
  CONSTRAINT `fk_paya_states_paya_countries1`
    FOREIGN KEY (`paya_countries_countryid`)
    REFERENCES `PayAssistantDB`.`paya_countries` (`countryid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PayAssistantDB`.`paya_cities`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PayAssistantDB`.`paya_cities` (
  `cityid` INT NOT NULL AUTO_INCREMENT,
  `cityname` VARCHAR(60) NOT NULL,
  `stateid` INT NOT NULL,
  PRIMARY KEY (`cityid`),
  INDEX `fk_paya_cities_paya_states1_idx` (`stateid` ASC) VISIBLE,
  CONSTRAINT `fk_paya_cities_paya_states1`
    FOREIGN KEY (`stateid`)
    REFERENCES `PayAssistantDB`.`paya_states` (`stateid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PayAssistantDB`.`paya_addresses`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PayAssistantDB`.`paya_addresses` (
  `addressid` INT NOT NULL,
  `line1` VARCHAR(200) NOT NULL,
  `line2` VARCHAR(200) NOT NULL,
  `zipcode` VARCHAR(9) NOT NULL,
  `location` POINT NOT NULL,
  `addresstype` ENUM("WORK", "BILLING", "SHIPPING", "BRANCH", "OFFICE") NULL,
  `cityid` INT NOT NULL,
  PRIMARY KEY (`addressid`),
  INDEX `fk_paya_addresses_paya_cities1_idx` (`cityid` ASC) VISIBLE,
  CONSTRAINT `fk_paya_addresses_paya_cities1`
    FOREIGN KEY (`cityid`)
    REFERENCES `PayAssistantDB`.`paya_cities` (`cityid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PayAssistantDB`.`paya_userspermissions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PayAssistantDB`.`paya_userspermissions` (
  `userpermissionsid` INT NOT NULL,
  `asignateddate` DATETIME NOT NULL,
  `username` VARCHAR(45) NOT NULL,
  `checksum` VARBINARY(250) NOT NULL,
  `enable` BIT(1) NOT NULL,
  `deleted` BIT(1) NOT NULL,
  `userid` INT NOT NULL,
  `permissionid` INT NOT NULL,
  PRIMARY KEY (`userpermissionsid`),
  INDEX `paya_users2_idx` (`userid` ASC) VISIBLE,
  INDEX `paya_permissions2_idx` (`permissionid` ASC) VISIBLE,
  CONSTRAINT `paya_users2`
    FOREIGN KEY (`userid`)
    REFERENCES `PayAssistantDB`.`paya_users` (`userid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `paya_permissions2`
    FOREIGN KEY (`permissionid`)
    REFERENCES `PayAssistantDB`.`paya_permissions` (`permissionid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PayAssistantDB`.`paya_mediatypes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PayAssistantDB`.`paya_mediatypes` (
  `mediatypeid` INT NOT NULL,
  `name` VARCHAR(20) NOT NULL,
  `formattype` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`mediatypeid`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PayAssistantDB`.`paya_mediafiles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PayAssistantDB`.`paya_mediafiles` (
  `mediafileid` INT NOT NULL,
  `userid` INT NOT NULL,
  `filename` VARCHAR(60) NOT NULL,
  `storageurl` VARCHAR(100) NOT NULL,
  `filesize` INT NOT NULL,
  `uploadedhour` DATETIME NOT NULL,
  `mediatypeid` INT NOT NULL,
  PRIMARY KEY (`mediafileid`),
  INDEX `paya_users3_idx` (`userid` ASC) VISIBLE,
  INDEX `fk_paya_mediafiles_paya_mediatypes1_idx` (`mediatypeid` ASC) VISIBLE,
  CONSTRAINT `paya_users3`
    FOREIGN KEY (`userid`)
    REFERENCES `PayAssistantDB`.`paya_users` (`userid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_paya_mediafiles_paya_mediatypes1`
    FOREIGN KEY (`mediatypeid`)
    REFERENCES `PayAssistantDB`.`paya_mediatypes` (`mediatypeid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PayAssistantDB`.`paya_mediafilestatus`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PayAssistantDB`.`paya_mediafilestatus` (
  `mediafilestatusid` INT NOT NULL,
  `mediafileid` INT NOT NULL,
  `name` VARCHAR(100) NOT NULL,
  `statusactive` BIT(1) NOT NULL,
  PRIMARY KEY (`mediafilestatusid`),
  INDEX `paya_mediafiles2_idx` (`mediafileid` ASC) VISIBLE,
  CONSTRAINT `paya_mediafiles2`
    FOREIGN KEY (`mediafileid`)
    REFERENCES `PayAssistantDB`.`paya_mediafiles` (`mediafileid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PayAssistantDB`.`paya_paymentmethods`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PayAssistantDB`.`paya_paymentmethods` (
  `paymentmethodsid` INT NOT NULL,
  `name` VARCHAR(50) NOT NULL,
  `apiurl` VARCHAR(180) NOT NULL,
  `secretkey` VARBINARY(250) NOT NULL,
  `key` VARBINARY(250) NOT NULL,
  `logoiconurl` VARCHAR(50) NOT NULL,
  `enable` BIT(1) NOT NULL,
  PRIMARY KEY (`paymentmethodsid`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PayAssistantDB`.`paya_availablemethods`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PayAssistantDB`.`paya_availablemethods` (
  `availablemethodsid` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `apiurl` VARCHAR(180) NOT NULL,
  `token` VARBINARY(250) NOT NULL,
  `expTokenDate` DATETIME NOT NULL,
  `enable` BIT(1) NOT NULL,
  `userid` INT NOT NULL,
  `paymentmethodsid` INT NOT NULL,
  PRIMARY KEY (`availablemethodsid`),
  INDEX `fk_paya_availablemethods_paya_users1_idx` (`userid` ASC) VISIBLE,
  INDEX `fk_paya_availablemethods_paya_paymentmethods1_idx` (`paymentmethodsid` ASC) VISIBLE,
  CONSTRAINT `fk_paya_availablemethods_paya_users1`
    FOREIGN KEY (`userid`)
    REFERENCES `PayAssistantDB`.`paya_users` (`userid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_paya_availablemethods_paya_paymentmethods1`
    FOREIGN KEY (`paymentmethodsid`)
    REFERENCES `PayAssistantDB`.`paya_paymentmethods` (`paymentmethodsid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PayAssistantDB`.`paya_payments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PayAssistantDB`.`paya_payments` (
  `paymentsid` BIGINT NOT NULL,
  `amount` VARCHAR(120) NOT NULL,
  `realamount` VARCHAR(120) NOT NULL,
  `discountporcent` INT NOT NULL,
  `currency` VARCHAR(20) NOT NULL,
  `result` VARCHAR(10) NOT NULL,
  `auth` VARCHAR(100) NOT NULL,
  `reference` VARCHAR(100) NOT NULL,
  `chargetoken` VARCHAR(100) NOT NULL,
  `description` VARCHAR(100) NOT NULL,
  `error` VARCHAR(100) NOT NULL,
  `date` DATETIME NOT NULL,
  `checksum` VARBINARY(250) NOT NULL,
  `paymentmethodsid` INT NOT NULL,
  `availablemethodsid` INT NOT NULL,
  PRIMARY KEY (`paymentsid`),
  INDEX `fk_paya_payments_paya_paymentmethods1_idx` (`paymentmethodsid` ASC) VISIBLE,
  INDEX `fk_paya_payments_paya_availablemethods1_idx` (`availablemethodsid` ASC) VISIBLE,
  CONSTRAINT `fk_paya_payments_paya_paymentmethods1`
    FOREIGN KEY (`paymentmethodsid`)
    REFERENCES `PayAssistantDB`.`paya_paymentmethods` (`paymentmethodsid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_paya_payments_paya_availablemethods1`
    FOREIGN KEY (`availablemethodsid`)
    REFERENCES `PayAssistantDB`.`paya_availablemethods` (`availablemethodsid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PayAssistantDB`.`paya_conctactinfotypes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PayAssistantDB`.`paya_conctactinfotypes` (
  `contactinfotypeid` INT NOT NULL,
  `typename` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`contactinfotypeid`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PayAssistantDB`.`paya_contactinfo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PayAssistantDB`.`paya_contactinfo` (
  `contactinfoid` INT NOT NULL,
  `value` VARCHAR(100) NOT NULL,
  `enable` BIT(1) NOT NULL,
  `lastupdate` DATETIME NOT NULL,
  `companyid` INT NOT NULL,
  `contactinfotypeid` INT NOT NULL,
  PRIMARY KEY (`contactinfoid`),
  INDEX `paya_companies4_idx` (`companyid` ASC) VISIBLE,
  INDEX `paya_conctactinfotypes1_idx` (`contactinfotypeid` ASC) VISIBLE,
  CONSTRAINT `paya_companies4`
    FOREIGN KEY (`companyid`)
    REFERENCES `PayAssistantDB`.`paya_companies` (`companyid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `paya_conctactinfotypes1`
    FOREIGN KEY (`contactinfotypeid`)
    REFERENCES `PayAssistantDB`.`paya_conctactinfotypes` (`contactinfotypeid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PayAssistantDB`.`paya_logtypes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PayAssistantDB`.`paya_logtypes` (
  `logtypeid` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `ref1desc` VARCHAR(100) NOT NULL,
  `ref2desc` VARCHAR(100) NOT NULL,
  `value1desc` VARCHAR(100) NOT NULL,
  `value2desc` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`logtypeid`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PayAssistantDB`.`paya_logsources`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PayAssistantDB`.`paya_logsources` (
  `logsourcesid` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`logsourcesid`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PayAssistantDB`.`paya_logseverity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PayAssistantDB`.`paya_logseverity` (
  `logseverityid` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`logseverityid`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PayAssistantDB`.`paya_logs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PayAssistantDB`.`paya_logs` (
  `logid` INT NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(245) NOT NULL,
  `username` VARCHAR(45) NOT NULL,
  `posttime` DATETIME NOT NULL,
  `computer` VARCHAR(40) NOT NULL,
  `trace` TEXT(50) NOT NULL,
  `referenceid1` BIGINT(10) NOT NULL,
  `referenceid2` BIGINT(10) NOT NULL,
  `value1` VARCHAR(180) NOT NULL,
  `value2` VARCHAR(180) NOT NULL,
  `checksum` VARBINARY(250) NOT NULL,
  `logtypeid` INT NOT NULL,
  `logsourcesid` INT NOT NULL,
  `logseverityid` INT NOT NULL,
  `userid` INT NOT NULL,
  PRIMARY KEY (`logid`),
  INDEX `fk_paya_logs_paya_logtypes1_idx` (`logtypeid` ASC) VISIBLE,
  INDEX `fk_paya_logs_paya_logsources1_idx` (`logsourcesid` ASC) VISIBLE,
  INDEX `fk_paya_logs_paya_logseverity1_idx` (`logseverityid` ASC) VISIBLE,
  INDEX `fk_paya_logs_paya_users1_idx` (`userid` ASC) VISIBLE,
  CONSTRAINT `fk_paya_logs_paya_logtypes1`
    FOREIGN KEY (`logtypeid`)
    REFERENCES `PayAssistantDB`.`paya_logtypes` (`logtypeid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_paya_logs_paya_logsources1`
    FOREIGN KEY (`logsourcesid`)
    REFERENCES `PayAssistantDB`.`paya_logsources` (`logsourcesid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_paya_logs_paya_logseverity1`
    FOREIGN KEY (`logseverityid`)
    REFERENCES `PayAssistantDB`.`paya_logseverity` (`logseverityid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_paya_logs_paya_users1`
    FOREIGN KEY (`userid`)
    REFERENCES `PayAssistantDB`.`paya_users` (`userid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PayAssistantDB`.`paya_transactionsubtypes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PayAssistantDB`.`paya_transactionsubtypes` (
  `transactionsubtypeid` INT NOT NULL,
  `name` VARCHAR(25) NOT NULL,
  PRIMARY KEY (`transactionsubtypeid`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PayAssistantDB`.`paya_transactiontypes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PayAssistantDB`.`paya_transactiontypes` (
  `transactiontypeid` INT NOT NULL,
  `name` VARCHAR(25) NOT NULL,
  PRIMARY KEY (`transactiontypeid`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PayAssistantDB`.`paya_exchangerates`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PayAssistantDB`.`paya_exchangerates` (
  `exchangerateid` INT NOT NULL,
  `startdate` DATETIME NOT NULL,
  `enddate` DATETIME NOT NULL,
  `exchangerate` DECIMAL NOT NULL,
  `currentexchangerate` BIT(1) NOT NULL,
  `currencyidsource` INT NOT NULL,
  `currencyiddestiny` INT NOT NULL,
  PRIMARY KEY (`exchangerateid`),
  INDEX `fk_paya_exchangerates_paya_currencies1_idx` (`currencyidsource` ASC) VISIBLE,
  INDEX `fk_paya_exchangerates_paya_currencies2_idx` (`currencyiddestiny` ASC) VISIBLE,
  CONSTRAINT `fk_paya_exchangerates_paya_currencies1`
    FOREIGN KEY (`currencyidsource`)
    REFERENCES `PayAssistantDB`.`paya_currencies` (`currencyid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_paya_exchangerates_paya_currencies2`
    FOREIGN KEY (`currencyiddestiny`)
    REFERENCES `PayAssistantDB`.`paya_currencies` (`currencyid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PayAssistantDB`.`paya_transactions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PayAssistantDB`.`paya_transactions` (
  `transactionid` BIGINT(10) NOT NULL,
  `name` VARCHAR(40) NOT NULL,
  `amount` DECIMAL NOT NULL,
  `description` VARCHAR(100) NOT NULL,
  `reference` VARCHAR(100) NOT NULL,
  `datetime` DATETIME NOT NULL,
  `officetime` DATETIME NOT NULL,
  `userid2` INT NULL,
  `checksum` VARBINARY(250) NOT NULL,
  `transactionsubtypeid` INT NOT NULL,
  `transactiontypeid` INT NOT NULL,
  `exchangerateid` INT NOT NULL,
  `currencyid` INT NOT NULL,
  `paymentsid` BIGINT NOT NULL,
  `userid` INT NOT NULL,
  PRIMARY KEY (`transactionid`),
  INDEX `fk_paya_transactions_paya_transactionsubtypes1_idx` (`transactionsubtypeid` ASC) VISIBLE,
  INDEX `fk_paya_transactions_paya_transactiontypes1_idx` (`transactiontypeid` ASC) VISIBLE,
  INDEX `fk_paya_transactions_paya_exchangerates1_idx` (`exchangerateid` ASC) VISIBLE,
  INDEX `fk_paya_transactions_paya_currencies1_idx` (`currencyid` ASC) VISIBLE,
  INDEX `fk_paya_transactions_paya_payments1_idx` (`paymentsid` ASC) VISIBLE,
  INDEX `fk_paya_transactions_paya_users1_idx` (`userid` ASC) VISIBLE,
  CONSTRAINT `fk_paya_transactions_paya_transactionsubtypes1`
    FOREIGN KEY (`transactionsubtypeid`)
    REFERENCES `PayAssistantDB`.`paya_transactionsubtypes` (`transactionsubtypeid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_paya_transactions_paya_transactiontypes1`
    FOREIGN KEY (`transactiontypeid`)
    REFERENCES `PayAssistantDB`.`paya_transactiontypes` (`transactiontypeid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_paya_transactions_paya_exchangerates1`
    FOREIGN KEY (`exchangerateid`)
    REFERENCES `PayAssistantDB`.`paya_exchangerates` (`exchangerateid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_paya_transactions_paya_currencies1`
    FOREIGN KEY (`currencyid`)
    REFERENCES `PayAssistantDB`.`paya_currencies` (`currencyid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_paya_transactions_paya_payments1`
    FOREIGN KEY (`paymentsid`)
    REFERENCES `PayAssistantDB`.`paya_payments` (`paymentsid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_paya_transactions_paya_users1`
    FOREIGN KEY (`userid`)
    REFERENCES `PayAssistantDB`.`paya_users` (`userid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PayAssistantDB`.`paya_subscriptions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PayAssistantDB`.`paya_subscriptions` (
  `subscriptionid` INT NOT NULL,
  `description` VARCHAR(100) NOT NULL,
  `logoURL` VARCHAR(250) NOT NULL,
  `startdate` DATETIME NOT NULL,
  `enddate` DATETIME NOT NULL,
  `autorenew` BIT(1) NOT NULL,
  PRIMARY KEY (`subscriptionid`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PayAssistantDB`.`paya_schedules`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PayAssistantDB`.`paya_schedules` (
  `scheduleid` INT NOT NULL,
  `name` VARCHAR(100) NOT NULL,
  `recurrencytype` ENUM("DAILY", "WEEKLY", "MONTHLY", "YEARLY", "CUSTOM") NOT NULL,
  `repeat` BIT(1) NOT NULL,
  `endtype` ENUM("DATE", "REPETITIONS", "NEVER") NOT NULL,
  `repetitions` INT NOT NULL,
  `enddate` DATETIME NULL,
  PRIMARY KEY (`scheduleid`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PayAssistantDB`.`paya_scheduledetails`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PayAssistantDB`.`paya_scheduledetails` (
  `scheduledetailsid` INT NOT NULL,
  `deleted` BIT(1) NOT NULL,
  `basedate` DATETIME NOT NULL,
  `datepart` VARCHAR(30) NOT NULL,
  `lastexecution` DATETIME NOT NULL,
  `nextexecution` DATETIME NOT NULL,
  `scheduleid` INT NOT NULL,
  PRIMARY KEY (`scheduledetailsid`),
  INDEX `fk_paya_scheduledetails_paya_schedules1_idx` (`scheduleid` ASC) VISIBLE,
  CONSTRAINT `fk_paya_scheduledetails_paya_schedules1`
    FOREIGN KEY (`scheduleid`)
    REFERENCES `PayAssistantDB`.`paya_schedules` (`scheduleid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PayAssistantDB`.`paya_planprices`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PayAssistantDB`.`paya_planprices` (
  `planpriceid` INT NOT NULL,
  `amount` DECIMAL NOT NULL,
  `current` BIT(1) NOT NULL,
  `subscriptionid` INT NOT NULL,
  `scheduledetailsid` INT NOT NULL,
  `currencyid` INT NOT NULL,
  `postdate` DATETIME NOT NULL,
  `enddate` DATETIME NOT NULL,
  PRIMARY KEY (`planpriceid`),
  INDEX `fk_paya_planprices_paya_subscriptions1_idx` (`subscriptionid` ASC) VISIBLE,
  INDEX `fk_paya_planprices_paya_scheduledetails1_idx` (`scheduledetailsid` ASC) VISIBLE,
  INDEX `fk_paya_planprices_paya_currencies1_idx` (`currencyid` ASC) VISIBLE,
  CONSTRAINT `fk_paya_planprices_paya_subscriptions1`
    FOREIGN KEY (`subscriptionid`)
    REFERENCES `PayAssistantDB`.`paya_subscriptions` (`subscriptionid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_paya_planprices_paya_scheduledetails1`
    FOREIGN KEY (`scheduledetailsid`)
    REFERENCES `PayAssistantDB`.`paya_scheduledetails` (`scheduledetailsid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_paya_planprices_paya_currencies1`
    FOREIGN KEY (`currencyid`)
    REFERENCES `PayAssistantDB`.`paya_currencies` (`currencyid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PayAssistantDB`.`paya_plans`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PayAssistantDB`.`paya_plans` (
  `planid` INT NOT NULL,
  `adquisition` DATETIME NOT NULL,
  `enabled` BIT(1) NOT NULL,
  `userid` INT NOT NULL,
  `planpriceid` INT NOT NULL,
  `scheduledetailsid` INT NOT NULL,
  PRIMARY KEY (`planid`),
  INDEX `fk_paya_plans_paya_users1_idx` (`userid` ASC) VISIBLE,
  INDEX `fk_paya_plans_paya_planprices1_idx` (`planpriceid` ASC) VISIBLE,
  INDEX `fk_paya_plans_paya_scheduledetails1_idx` (`scheduledetailsid` ASC) VISIBLE,
  CONSTRAINT `fk_paya_plans_paya_users1`
    FOREIGN KEY (`userid`)
    REFERENCES `PayAssistantDB`.`paya_users` (`userid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_paya_plans_paya_planprices1`
    FOREIGN KEY (`planpriceid`)
    REFERENCES `PayAssistantDB`.`paya_planprices` (`planpriceid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_paya_plans_paya_scheduledetails1`
    FOREIGN KEY (`scheduledetailsid`)
    REFERENCES `PayAssistantDB`.`paya_scheduledetails` (`scheduledetailsid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PayAssistantDB`.`paya_planfeatures`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PayAssistantDB`.`paya_planfeatures` (
  `planfeatureid` INT NOT NULL,
  `description` VARCHAR(100) NOT NULL,
  `enabled` BIT(1) NOT NULL,
  `datatype` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`planfeatureid`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PayAssistantDB`.`paya_personplanlimits`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PayAssistantDB`.`paya_personplanlimits` (
  `planlimits` INT NOT NULL,
  `limit` VARCHAR(10) NOT NULL,
  `enabled` BIT(1) NOT NULL,
  `datatype` VARCHAR(10) NOT NULL,
  `planid` INT NOT NULL,
  `planfeatureid` INT NOT NULL,
  PRIMARY KEY (`planlimits`),
  INDEX `fk_paya_personplanlimits_paya_plans1_idx` (`planid` ASC) VISIBLE,
  INDEX `fk_paya_personplanlimits_paya_planfeatures1_idx` (`planfeatureid` ASC) VISIBLE,
  CONSTRAINT `fk_paya_personplanlimits_paya_plans1`
    FOREIGN KEY (`planid`)
    REFERENCES `PayAssistantDB`.`paya_plans` (`planid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_paya_personplanlimits_paya_planfeatures1`
    FOREIGN KEY (`planfeatureid`)
    REFERENCES `PayAssistantDB`.`paya_planfeatures` (`planfeatureid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PayAssistantDB`.`paya_featuresperplan`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PayAssistantDB`.`paya_featuresperplan` (
  `featuresperplanid` INT NOT NULL,
  `value` VARCHAR(100) NOT NULL,
  `enabled` BIT(1) NOT NULL,
  `planfeatureid` INT NOT NULL,
  `subscriptionid` INT NOT NULL,
  PRIMARY KEY (`featuresperplanid`),
  INDEX `fk_paya_featuresperplan_paya_planfeatures1_idx` (`planfeatureid` ASC) VISIBLE,
  INDEX `fk_paya_featuresperplan_paya_subscriptions1_idx` (`subscriptionid` ASC) VISIBLE,
  CONSTRAINT `fk_paya_featuresperplan_paya_planfeatures1`
    FOREIGN KEY (`planfeatureid`)
    REFERENCES `PayAssistantDB`.`paya_planfeatures` (`planfeatureid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_paya_featuresperplan_paya_subscriptions1`
    FOREIGN KEY (`subscriptionid`)
    REFERENCES `PayAssistantDB`.`paya_subscriptions` (`subscriptionid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PayAssistantDB`.`paya_audio`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PayAssistantDB`.`paya_audio` (
  `usersaudioid` INT NOT NULL,
  `transcriptionid` INT NOT NULL,
  PRIMARY KEY (`usersaudioid`),
  INDEX `paya_transcriptions2_idx` (`transcriptionid` ASC) VISIBLE,
  CONSTRAINT `paya_transcriptions2`
    FOREIGN KEY (`transcriptionid`)
    REFERENCES `PayAssistantDB`.`paya_transcriptions` (`transcriptionid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PayAssistantDB`.`paya_conversationthreads`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PayAssistantDB`.`paya_conversationthreads` (
  `conversationthreadid` INT NOT NULL,
  `userid` INT NOT NULL,
  `starttime` DATETIME NOT NULL,
  `endtime` DATETIME NOT NULL,
  `active` BIT(1) NOT NULL,
  `threadtitle` VARCHAR(100) NOT NULL,
  `summary` VARCHAR(250) NULL,
  PRIMARY KEY (`conversationthreadid`),
  INDEX `fk_paya_conversationthreads_paya_users1_idx` (`userid` ASC) VISIBLE,
  CONSTRAINT `fk_paya_conversationthreads_paya_users1`
    FOREIGN KEY (`userid`)
    REFERENCES `PayAssistantDB`.`paya_users` (`userid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PayAssistantDB`.`paya_transcriptions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PayAssistantDB`.`paya_transcriptions` (
  `transcriptionid` INT NOT NULL,
  `dateofcreation` DATETIME NOT NULL,
  `duration(s)` INT NOT NULL,
  `status` VARCHAR(5) NOT NULL,
  `transcriptionurl` VARCHAR(250) NOT NULL,
  `usersaudioid` INT NOT NULL,
  `languageid` INT NOT NULL,
  `mediafile` INT NOT NULL,
  `conversationthreadid` INT NOT NULL,
  PRIMARY KEY (`transcriptionid`),
  INDEX `paya_usersaudio1_idx` (`usersaudioid` ASC) VISIBLE,
  INDEX `paya_languages2_idx` (`languageid` ASC) VISIBLE,
  INDEX `fk_paya_transcriptions_paya_mediafiles1_idx` (`mediafile` ASC) VISIBLE,
  INDEX `fk_paya_transcriptions_paya_conversationthreads1_idx` (`conversationthreadid` ASC) VISIBLE,
  CONSTRAINT `paya_usersaudio1`
    FOREIGN KEY (`usersaudioid`)
    REFERENCES `PayAssistantDB`.`paya_audio` (`usersaudioid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `paya_languages2`
    FOREIGN KEY (`languageid`)
    REFERENCES `PayAssistantDB`.`paya_languages` (`languageid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_paya_transcriptions_paya_mediafiles1`
    FOREIGN KEY (`mediafile`)
    REFERENCES `PayAssistantDB`.`paya_mediafiles` (`mediafileid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_paya_transcriptions_paya_conversationthreads1`
    FOREIGN KEY (`conversationthreadid`)
    REFERENCES `PayAssistantDB`.`paya_conversationthreads` (`conversationthreadid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PayAssistantDB`.`paya_cuepoints`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PayAssistantDB`.`paya_cuepoints` (
  `cuepointid` INT NOT NULL,
  `starttime` TIME NOT NULL,
  `endtime` TIME NOT NULL,
  `description` VARCHAR(45) NOT NULL,
  `usersaudioid` INT NOT NULL,
  PRIMARY KEY (`cuepointid`),
  INDEX `paya_usersaudio2_idx` (`usersaudioid` ASC) VISIBLE,
  CONSTRAINT `paya_usersaudio2`
    FOREIGN KEY (`usersaudioid`)
    REFERENCES `PayAssistantDB`.`paya_audio` (`usersaudioid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PayAssistantDB`.`paya_jsonpartitions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PayAssistantDB`.`paya_jsonpartitions` (
  `jsonpartitionsid` INT NOT NULL,
  `jsonurl` VARCHAR(250) NOT NULL,
  `transcriptionid` INT NOT NULL,
  PRIMARY KEY (`jsonpartitionsid`),
  INDEX `paya_transcriptions1_idx` (`transcriptionid` ASC) VISIBLE,
  CONSTRAINT `paya_transcriptions1`
    FOREIGN KEY (`transcriptionid`)
    REFERENCES `PayAssistantDB`.`paya_transcriptions` (`transcriptionid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PayAssistantDB`.`paya_aieventtypes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PayAssistantDB`.`paya_aieventtypes` (
  `eventid` INT NOT NULL,
  `status` VARCHAR(45) NOT NULL,
  `description` VARCHAR(200) NOT NULL,
  `completed` BIT(1) NOT NULL,
  PRIMARY KEY (`eventid`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PayAssistantDB`.`paya_ai_interactions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PayAssistantDB`.`paya_ai_interactions` (
  `interactionid` INT NOT NULL,
  `transcriptionid` INT NOT NULL,
  `eventid` INT NOT NULL,
  `prompt` VARCHAR(250) NOT NULL,
  `response` VARCHAR(250) NOT NULL,
  `duration(s)` INT NOT NULL,
  `tokensused` INT NOT NULL,
  `timestamp` DATETIME NOT NULL DEFAULT NOW(),
  PRIMARY KEY (`interactionid`),
  INDEX `paya_transcriptions3_idx` (`transcriptionid` ASC) VISIBLE,
  INDEX `fk_paya_ai_interactions_paya_aieventtypes1_idx` (`eventid` ASC) VISIBLE,
  CONSTRAINT `paya_transcriptions3`
    FOREIGN KEY (`transcriptionid`)
    REFERENCES `PayAssistantDB`.`paya_transcriptions` (`transcriptionid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_paya_ai_interactions_paya_aieventtypes1`
    FOREIGN KEY (`eventid`)
    REFERENCES `PayAssistantDB`.`paya_aieventtypes` (`eventid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PayAssistantDB`.`paya_addressasignations`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PayAssistantDB`.`paya_addressasignations` (
  `addressasignationsid` INT NOT NULL,
  `entitytype` VARCHAR(50) NOT NULL,
  `entityid` INT NOT NULL,
  `addressid` INT NOT NULL,
  PRIMARY KEY (`addressasignationsid`),
  INDEX `fk_paya_addressasignations_paya_addresses1_idx` (`addressid` ASC) VISIBLE,
  CONSTRAINT `fk_paya_addressasignations_paya_addresses1`
    FOREIGN KEY (`addressid`)
    REFERENCES `PayAssistantDB`.`paya_addresses` (`addressid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PayAssistantDB`.`paya_cloudservices`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PayAssistantDB`.`paya_cloudservices` (
  `cloudservicesid` INT NOT NULL,
  `aiusedurl` VARCHAR(250) NOT NULL,
  `secretkey` VARBINARY(250) NOT NULL,
  `porcentofcertainty` INT NOT NULL,
  `transcriptionid` INT NOT NULL,
  PRIMARY KEY (`cloudservicesid`),
  INDEX `paya_transcriptions4_idx` (`transcriptionid` ASC) VISIBLE,
  CONSTRAINT `paya_transcriptions4`
    FOREIGN KEY (`transcriptionid`)
    REFERENCES `PayAssistantDB`.`paya_transcriptions` (`transcriptionid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PayAssistantDB`.`paya_datatypes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PayAssistantDB`.`paya_datatypes` (
  `datatypeid` INT NOT NULL,
  `name` VARCHAR(50) NOT NULL,
  `description` VARCHAR(60) NOT NULL,
  PRIMARY KEY (`datatypeid`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PayAssistantDB`.`paya_ai_datacollects`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PayAssistantDB`.`paya_ai_datacollects` (
  `datacollectid` INT NOT NULL,
  `value` VARCHAR(100) NOT NULL,
  `collecteddate` DATETIME NOT NULL,
  `datatypeid` INT NOT NULL,
  `interactionid` INT NOT NULL,
  PRIMARY KEY (`datacollectid`),
  INDEX `fk_paya_ai_datacollects_paya_datatypes2_idx` (`datatypeid` ASC) VISIBLE,
  INDEX `fk_paya_ai_datacollects_paya_ai_interactions1_idx` (`interactionid` ASC) VISIBLE,
  CONSTRAINT `fk_paya_ai_datacollects_paya_datatypes2`
    FOREIGN KEY (`datatypeid`)
    REFERENCES `PayAssistantDB`.`paya_datatypes` (`datatypeid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_paya_ai_datacollects_paya_ai_interactions1`
    FOREIGN KEY (`interactionid`)
    REFERENCES `PayAssistantDB`.`paya_ai_interactions` (`interactionid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PayAssistantDB`.`paya_companiesroles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PayAssistantDB`.`paya_companiesroles` (
  `asginationdate` DATETIME NOT NULL,
  `username` VARCHAR(45) NOT NULL,
  `checksum` VARBINARY(250) NOT NULL,
  `enable` BIT(1) NOT NULL,
  `deleted` BIT(1) NOT NULL,
  `companieroleid` VARCHAR(45) NOT NULL,
  `paya_roles_roleid` INT NOT NULL,
  `paya_companies_companyid` INT NOT NULL,
  PRIMARY KEY (`companieroleid`),
  INDEX `fk_paya_companiesroles_paya_roles1_idx` (`paya_roles_roleid` ASC) VISIBLE,
  INDEX `fk_paya_companiesroles_paya_companies1_idx` (`paya_companies_companyid` ASC) VISIBLE,
  CONSTRAINT `fk_paya_companiesroles_paya_roles1`
    FOREIGN KEY (`paya_roles_roleid`)
    REFERENCES `PayAssistantDB`.`paya_roles` (`roleid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_paya_companiesroles_paya_companies1`
    FOREIGN KEY (`paya_companies_companyid`)
    REFERENCES `PayAssistantDB`.`paya_companies` (`companyid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

DROP PROCEDURE IF EXISTS insertarusers;
DELIMITER //
CREATE PROCEDURE insertarusers()
BEGIN
    DECLARE i INT DEFAULT 0;
    DECLARE num_users INT DEFAULT 50; 
	DECLARE nombreusado VARCHAR(45);
	DECLARE apellidousado VARCHAR(45);
    DECLARE enablebit BIT; 
    DECLARE verifiedbit BIT;
    CREATE TEMPORARY TABLE nombres (nombre VARCHAR(45));
    CREATE TEMPORARY TABLE apellidos (apellido VARCHAR(45));
    
    INSERT INTO nombres (nombre)
    VALUES
        ('Isaac'),('Carlos'),('David'),('Pedro'),('Juan'),('María'),('Ana'),('José'),('Roberto'),('Miguel'),('Arturo'),('Rodrigo'),('Kevin'),('José'),('Samuel'),('Viviana'),('Sofia'),('Lucia'),('Martina'),('Pabla'),('Christopher'),('Adriana'),('Anthony'),('Walter'),('Bruce'),('Carmela');
        
    INSERT INTO apellidos (apellido)
    VALUES
        ('Villalobos'),('López'),('González'),('Pérez'),('Rodríguez'),('Hernández'),('Martínez'),('Sánchez'),('Ramírez'),('Fernández'),('Cheng'),('Johnson'),('Bonilla'),('Castillo'),('Moltisanti'),('La_Cerva'),('Soprano'),('White'),('Wayne'),('Gualtieri');
        
    WHILE i < num_users DO
        SELECT nombre INTO nombreusado FROM nombres ORDER BY RAND() LIMIT 1;
        SELECT apellido INTO apellidousado FROM apellidos ORDER BY RAND() LIMIT 1;
        SET enablebit = IF(RAND() < 0.3, 0, 1); 
        SET verifiedbit = IF(RAND() < 0.3, 0, 1);
        INSERT INTO `PayAssistantDB`.`paya_users` 
        (`username`, `email`, `password`, `fname`, `lname`, `phone`, `enable`, `verified`, `creationdate`, `lastlogin`) 
        VALUES 
        (CONCAT(nombreusado, '_', apellidousado, FLOOR(RAND()*500)), 
        CONCAT(nombreusado, apellidousado, FLOOR(RAND() * 2280), '@gmail.com'),
        AES_ENCRYPT('ContraseñaSuperSecreta', 'jK3+5wGgL7eA1TRUQUITOPARACONTRASEÑASxT9KzLdq4YfX8jNwB9V'), 
        nombreusado, apellidousado, CONCAT(FLOOR(RAND() * 100000000), '') , enablebit, verifiedbit, 
        DATE_SUB(CURDATE(), INTERVAL FLOOR(RAND() * (720 - 180 + 1)) + 180 DAY) + INTERVAL FLOOR(RAND() * 60) MINUTE + INTERVAL FLOOR(RAND() * 60) SECOND,
        DATE_SUB(CURDATE(), INTERVAL FLOOR(RAND() * 180) DAY) + INTERVAL FLOOR(RAND() * 60) MINUTE + INTERVAL FLOOR(RAND() * 60) SECOND);
        SET i = i + 1;
    END WHILE;
    DROP TEMPORARY TABLE IF EXISTS nombres;
    DROP TEMPORARY TABLE IF EXISTS apellidos;
END //
DELIMITER ;

CALL insertarusers();
SELECT * from paya_users;

-- SELECT COUNT(*) AS enables_en_1 FROM paya_users WHERE enable = 1;
-- TRUNCATE TABLE paya_users;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
